{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{categoryAPI,productAPI}from'../../../shared/services/api';import NomenclatureCard from'../../../features/nomenclature/ui/NomenclatureCard';import NomenclatureTitle from'./NomenclatureTitle';import Button from'../../../shared/ui/Button';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NomenclatureList=()=>{const[category,setCategory]=useState({name:'',cost:'',typeCostFirst:'',typeCostSecond:'',products:[]});const{id}=useParams();const[visibleCount,setVisibleCount]=useState(5);// Количество видимых карточек\nuseEffect(()=>{loadCategoryAndProducts();},[id]);const loadCategoryAndProducts=async()=>{try{const categoryResponse=await categoryAPI.getCategories();const currentCategory=categoryResponse.data.categories.find(cat=>cat.id===parseInt(id));if(!currentCategory){console.error('Category not found');return;}const productsResponse=await productAPI.getProductsByCategoryId(id);setCategory({...currentCategory,products:productsResponse.data.products||[]});}catch(error){console.error('Error loading category and products:',error);}};const handleShowMore=()=>{setVisibleCount(prevCount=>prevCount+5);// Увеличиваем количество видимых карточек\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[category.name!==''?/*#__PURE__*/_jsx(NomenclatureTitle,{title:category.name,cost:category.cost}):/*#__PURE__*/_jsx(NomenclatureTitle,{title:'Название категории',cost:'5 000'}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4 mb-16 1440:hidden\",children:[category.products.length===0?/*#__PURE__*/_jsx(NomenclatureCard,{title:\"Пример\",desc:\"Описание примера\",countType:\"КГ.\",typeCostFirst:'Наличные',typeCostSecond:'Безналичные',image:'https://cdn2.picryl.com/photo/2021/03/17/soviet-armenian-k50-6-electrolytic-capacitors-0d6cca-1024.jpg',costFirst:'9 000',costSecond:'10 000'},0):category.products.slice(0,visibleCount).map(product=>/*#__PURE__*/_jsx(NomenclatureCard,{title:product.name,desc:product.desc,countType:product.countType,typeCostFirst:category.typeCostFirst,typeCostSecond:category.typeCostSecond,image:product.imageUrl,costFirst:product.costFirst,costSecond:product.costSecond},product.id)),visibleCount<category.products.length&&/*#__PURE__*/_jsx(Button,{text:'Показать еще',onClick:handleShowMore})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hidden w-min flex-col justify-start items-start gap-10 1440:inline-flex mb-16\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"self-stretch justify-start items-center gap-[60px] inline-flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-[260px] text-[#212121] text-xl font-gilroyMedium\",children:\"\\u0424\\u043E\\u0442\\u043E \\u0434\\u0435\\u0442\\u0430\\u043B\\u0438\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"justify-start items-center gap-5 flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-[380px] text-[#212121] text-xl font-gilroyMedium\",children:\"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-[220px] text-[#212121] text-xl font-gilroyMedium\",children:\"\\u0415\\u0434.\\u0418\\u0437\\u043C.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-[220px] text-[#212121] text-xl font-gilroyMedium\",children:category.typeCostFirst!==''?category.typeCostFirst:'Первый тип цены'}),/*#__PURE__*/_jsx(\"div\",{className:\"w-[220px] text-[#212121] text-xl font-gilroyMedium\",children:category.typeCostSecond!==''?category.typeCostSecond:'Второй тип цены'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"self-stretch flex-col justify-start items-start gap-5 flex\",children:category.products.length===0?/*#__PURE__*/_jsx(NomenclatureCard,{title:\"Пример\",desc:\"Описание примера\",countType:\"кг.\",typeCostFirst:'Наличные',typeCostSecond:'Безналичные',image:'https://cdn2.picryl.com/photo/2021/03/17/soviet-armenian-k50-6-electrolytic-capacitors-0d6cca-1024.jpg',costFirst:'9 000',costSecond:'10 000'},0):category.products.map(product=>/*#__PURE__*/_jsx(NomenclatureCard,{title:product.name,desc:product.desc,countType:product.countType,typeCostFirst:category.typeCostFirst,typeCostSecond:category.typeCostSecond,image:product.imageUrl,costFirst:product.costFirst,costSecond:product.costSecond},product.id))})]})]})]});};export default NomenclatureList;","map":{"version":3,"names":["React","useState","useEffect","useParams","categoryAPI","productAPI","NomenclatureCard","NomenclatureTitle","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NomenclatureList","category","setCategory","name","cost","typeCostFirst","typeCostSecond","products","id","visibleCount","setVisibleCount","loadCategoryAndProducts","categoryResponse","getCategories","currentCategory","data","categories","find","cat","parseInt","console","error","productsResponse","getProductsByCategoryId","handleShowMore","prevCount","children","title","className","length","desc","countType","image","costFirst","costSecond","slice","map","product","imageUrl","text","onClick"],"sources":["/root/frontend/src/pages/nomenclature/ui/NomenclatureList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { categoryAPI, productAPI } from '../../../shared/services/api';\nimport NomenclatureCard from '../../../features/nomenclature/ui/NomenclatureCard';\nimport NomenclatureTitle from './NomenclatureTitle';\nimport Button from '../../../shared/ui/Button';\n\nconst NomenclatureList = () => {\n  const [category, setCategory] = useState({\n    name: '',\n    cost: '',\n    typeCostFirst: '',\n    typeCostSecond: '',\n    products: []\n  });\n  const { id } = useParams();\n  const [visibleCount, setVisibleCount] = useState(5); // Количество видимых карточек\n\n  useEffect(() => {\n    loadCategoryAndProducts();\n  }, [id]);\n\n  const loadCategoryAndProducts = async () => {\n    try {\n      const categoryResponse = await categoryAPI.getCategories();\n      const currentCategory = categoryResponse.data.categories.find(cat => cat.id === parseInt(id));\n      \n      if (!currentCategory) {\n        console.error('Category not found');\n        return;\n      }\n\n      const productsResponse = await productAPI.getProductsByCategoryId(id);\n      \n      setCategory({\n        ...currentCategory,\n        products: productsResponse.data.products || []\n      });\n      \n    } catch (error) {\n      console.error('Error loading category and products:', error);\n    }\n  };\n\n  const handleShowMore = () => {\n    setVisibleCount(prevCount => prevCount + 5); // Увеличиваем количество видимых карточек\n  };\n\n  return (\n    <>\n    {category.name !== '' ? <NomenclatureTitle title={category.name} cost={category.cost} /> : <NomenclatureTitle title={'Название категории'} cost={'5 000'}/>}\n      <div>\n        <div className='space-y-4 mb-16 1440:hidden'>\n          {category.products.length === 0 ? <NomenclatureCard \n          key={0} \n          title={\"Пример\"} \n          desc={\"Описание примера\"} \n          countType={\"КГ.\"} \n          typeCostFirst={'Наличные'}\n          typeCostSecond={'Безналичные'}\n          image={'https://cdn2.picryl.com/photo/2021/03/17/soviet-armenian-k50-6-electrolytic-capacitors-0d6cca-1024.jpg'} \n          costFirst={'9 000'} \n          costSecond={'10 000'}\n          /> : category.products.slice(0, visibleCount).map(product => (\n            <NomenclatureCard \n              key={product.id} \n              title={product.name} \n              desc={product.desc} \n              countType={product.countType} \n              typeCostFirst={category.typeCostFirst}\n              typeCostSecond={category.typeCostSecond}\n              image={product.imageUrl} \n              costFirst={product.costFirst} \n              costSecond={product.costSecond}\n            />\n          ))}\n          {visibleCount < category.products.length && (\n            <Button text={'Показать еще'} onClick={handleShowMore}/>\n          )}\n        </div>\n\n        <div className=\"hidden w-min flex-col justify-start items-start gap-10 1440:inline-flex mb-16\">\n          <div className=\"self-stretch justify-start items-center gap-[60px] inline-flex\">\n            <div className=\"w-[260px] text-[#212121] text-xl font-gilroyMedium\">Фото детали</div>\n            <div className=\"justify-start items-center gap-5 flex\">\n              <div className=\"w-[380px] text-[#212121] text-xl font-gilroyMedium\">Наименование</div>\n              <div className=\"w-[220px] text-[#212121] text-xl font-gilroyMedium\">Ед.Изм.</div>\n              <div className=\"w-[220px] text-[#212121] text-xl font-gilroyMedium\">{category.typeCostFirst !== '' ? category.typeCostFirst : 'Первый тип цены'}</div>\n              <div className=\"w-[220px] text-[#212121] text-xl font-gilroyMedium\">{category.typeCostSecond !== '' ? category.typeCostSecond : 'Второй тип цены'}</div>\n            </div>\n          </div>\n          <div className=\"self-stretch flex-col justify-start items-start gap-5 flex\">\n          {category.products.length === 0 ? <NomenclatureCard \n          key={0} \n          title={\"Пример\"} \n          desc={\"Описание примера\"} \n          countType={\"кг.\"} \n          typeCostFirst={'Наличные'}\n          typeCostSecond={'Безналичные'}\n          image={'https://cdn2.picryl.com/photo/2021/03/17/soviet-armenian-k50-6-electrolytic-capacitors-0d6cca-1024.jpg'} \n          costFirst={'9 000'} \n          costSecond={'10 000'}\n          /> : category.products.map(product => (\n            <NomenclatureCard \n              key={product.id} \n              title={product.name} \n              desc={product.desc} \n              countType={product.countType} \n              typeCostFirst={category.typeCostFirst}\n              typeCostSecond={category.typeCostSecond}\n              image={product.imageUrl} \n              costFirst={product.costFirst} \n              costSecond={product.costSecond}\n            />\n          ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NomenclatureList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}